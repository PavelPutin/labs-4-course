function [ercl,idxn,prM] = erclust(M,NN,idx)
%‘ункци€ дл€ оценки частости (процента сшибок) при кластеризации образов 
%M - истинное число порождающих классов, индексы которых заданы как 1...M 
%NN- вектор - строка (1xM), содержащий объемы исходных выборок классов,
%idx - вектор-столбец (1хN), содержащий индексы принадлежности образов кластерам
%ercl - частость (общий процент) ошибок, допущенных при отнесении образов к кластерам
%idxn - вектор-столбец (1хN), содержащий индексы принадлежности
%образов  кластерам в исходном пор€дке нумерации порождающих классов
%prM - логическа€ переменна€, фиксирующа€ не совпадение контрольных параметров 
%при вы€влении кластеров
N=sum(NN);%общий объем выборки
if length(idx)~=N, 
    disp('error - размерности массивов не совпадают'); 
    ercl=NaN; idnx=NaN; prM=false;
else
    c=hist(idx,1:M+1); f=logical(0<c);  h=length(c(f));
    if h~=M, prM=false; disp('error - неправильное число классов');  end;
    prM=true; err=zeros(1,M); idxn=zeros(N,1); idd=zeros(1,M); ch=0;
while ch<M,
    %ѕоиск индекса класса, превалирующего по количеству образов 
    chist=hist(idx,0:M+1);  [v,id]=max(chist(2:M+1));
    %ќпределение номера группы nc среди всех групп с границами Ni*(i-1)+1:Ni*i, 
    %где он преобладает в наибольшей степени (исключа€ ранее выделенные группы)
    nidd=find(idd==0); Midd=length(nidd); s=zeros(1,M);
    if Midd>0,
       for i=1:Midd,
           ig=nidd(i);  if ig==1, Nmi=0; else Nmi=sum(NN(1:ig-1)); end; Nma=Nmi+NN(ig);
           idx_=idx(Nmi+1:Nma); in=find(idx_==id);
           s(ig)=length(in);
       end;
    end;
    [v,nc]=max(s);
    %ѕереобозначение индексов  образов, отнесенных к этому кластеру
    ind=logical(idx==id); idx(ind)=nc; idxn(ind)=nc;
    %—оотнесение исходных индексов образов с индексами, полученными при кластеризации
    Nc=NN(nc);
    if nc==1, Nmi=0; else Nmi=sum(NN(1:nc-1));end; Nma=Nmi+Nc;
    inc=find(idx(Nmi+1:Nma)==nc); pr=length(inc);
    err(nc)=Nc-pr; %подсчет ошибок
    idx(ind)=0; %исключение образов, имеющее индекс соотнесенного кластера из общего списка
    idd(nc)=1; %фиксаци€ индекса превалирующего кластера
    ch=ch+1;
end;
if sum(idd)~=M, prM=false; disp('error - плоха€ кластеризаци€'); end;
ercl=sum(err)/N;
end;
end

